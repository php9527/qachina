(add-to-list 'load-path "~/test/mu/mu4e")
(require 'mu4e)

(setq mu4e-maildir "~/.Mail")
(setq mu4e-drafts-folder "/[Gmail].Drafts")
(setq mu4e-sent-folder   "/[Gmail].Sent Mail")
;; don't save message to Sent Messages, Gmail/IMAP takes care of this
(setq mu4e-sent-messages-behavior 'delete)
;; allow for updating mail using 'U' in the main view:
(setq mu4e-get-mail-command "offlineimap")
 
;; shortcuts
(setq mu4e-maildir-shortcuts
    '( ("/INBOX"               . ?i)
       ("/[Gmail].Sent Mail"   . ?s)))
 
;; something about ourselves
(setq
   user-mail-address "xxx@gmail.com"
   user-full-name  "xxx"
   mu4e-compose-signature
    (concat
      "Cheers,\n"
      "Blah Man\n"))
 
;; show images
(setq mu4e-show-images t)
 
;; use imagemagick, if available
(when (fboundp 'imagemagick-register-types)
  (imagemagick-register-types))
 
;; convert html emails properly
;; Possible options:
;;   - html2text -utf8 -width 72
;;   - textutil -stdin -format html -convert txt -stdout
;;   - html2markdown | grep -v '&amp;nbsp_place_holder;' (Requires html2text pypi)
;;   - w3m -dump -cols 80 -T text/html
;;   - view in browser (provided below)
(setq mu4e-html2text-command "textutil -stdin -format html -convert txt -stdout")
 
;; spell check
(add-hook 'mu4e-compose-mode-hook
	(defun my-do-compose-stuff ()
	   "My settings for message composition."
	   (set-fill-column 72)
	   (flyspell-mode)))
 
;; add option to view html message in a browser
;; `aV` in view to activate
(add-to-list 'mu4e-view-actions
  '("ViewInBrowser" . mu4e-action-view-in-browser) t)
 
;; fetch mail every 10 mins
(setq mu4e-update-interval 600)

;; configuration for sending mail
(setq message-send-mail-function 'smtpmail-send-it
     smtpmail-stream-type 'starttls
     smtpmail-default-smtp-server "smtp.gmail.com"
     smtpmail-smtp-server "smtp.gmail.com"
     smtpmail-smtp-service 587)

;; refile messages according to the date
;; (defun refile-to-date-folder (prefix msg)
;;   "Refiles the message to the prefix.year.month folder according to 
;; the message date. Creates the folder if necessary"
;;   (let* ((time (mu4e-message-field-raw msg :date))
;;          (mdir (if time (concat prefix (format-time-string ".%Y.%m" time)) prefix))
;;          (fullpath (concat mu4e-maildir mdir)))
;;     (if (mu4e-create-maildir-maybe fullpath) 
;;         mdir
;;       (mu4e-error "Folder does not exist"))))

;; (defun refile-to-old-date-folder (msg)
;;   "Refiles to old."
;;   (refile-to-date-folder "/old" msg))

;; (setq 
;;  mu4e-maildir "~/.Maildir"
;;  mu4e-sent-folder "/Sent"
;;  mu4e-drafts-folder "/Drafts"
;;  mu4e-trash-folder "/Trash"
;;  mu4e-refile-folder 'refile-to-old-date-folder)

;http://kirang.in/2014/11/13/emacs-as-an-email-client-with-mu4e-and-offlineimap/

;mu index --maildir=~/.Mail
;
;~/.authinfo file and add the following into it:
;machine smtp.gmail.com login gmailusername password gmailpassword

;You can also encrypt the above file by running:
;gpg --output ~/.authinfo.gpg --symmetric ~/.authinfo

;; [general]
;; ui=TTYUI
;; accounts = Gmail
;; autorefresh = 5
 
;; [Account Gmail]
;; localrepository = Gmail-Local
;; remoterepository = Gmail-Remote
 
;; [Repository Gmail-Local]
;; type = Maildir
;; localfolders = ~/.Mail/xxx@gmail.com
 
;; [Repository Gmail-Remote]
;; type = Gmail
;; remotehost = imap.gmail.com
;; remoteuser = xxx@gmail.com
;; remotepass = ***
;; realdelete = no
;; ssl = yes
;; cert_fingerprint = e227f1d600c0c2f7115775f5cb748805677db57d
;; maxconnections = 1
;; folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
;; 					     '[Gmail]/Spam',
;; 					     '[Gmail]/All Mail',
;; 					     ]

;;; message view action
;; (defun mu4e-msgv-action-view-in-browser (msg)
;;   "View the body of the message in a web browser."
;;   (interactive)
;;   (let ((html (mu4e-msg-field (mu4e-message-at-point t) :body-html))
;;         (tmpfile (format "%s/%d.html" temporary-file-directory (random))))
;;     (unless html (error "No html part for this message"))
;;     (with-temp-file tmpfile
;;       (insert
;;         "<html>"
;;         "<head><meta http-equiv=\"content-type\""
;;         "content=\"text/html;charset=UTF-8\">"
;;         html))
;;       (browse-url (concat "file://" tmpfile))))
;; (add-to-list 'mu4e-view-actions
;;   '("View in browser" . mu4e-msgv-action-view-in-browser) t)

;mu index --maildir=~/.Mail

;; (setq  
;;    mu4e-get-mail-command "offlineimap"   ;; or fetchmail, or ...  
;;    mu4e-update-interval 300)             ;; update every 5 minutes  
  
;; (add-hook 'mu4e-index-updated-hook  
;;   (defun new-mail-sound ()  
;;     (shell-command "aplay ~/Music/open.wav&")))
