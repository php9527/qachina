用户管理
--------
useradd -m name 创建一个名为“name"的用户
passwd name 为名为”name“的用户设置密码
adduser 创建用户
userdel name 删除名为name 的用户
rmuser 删除用户
userinfo name 查看名为“name"的用户信息
groupadd gname 添加一个名为gname 的用户组
groupdel gname 删除一个名为gname 的用户组
usermod -G gname name 将一个名为name 的用户加入到gname 用户组


软件管理
--------
cd /usr/ports
make print-index
列出ports 中所有软件及相关信息
make search key=keyword 搜索包含关键字keyword 的软件
cd /usr/ports/cat/name;
make install
编译、安装catleiname 软件
make show=FLAVORS 查看name 软件的可用FLAVORS
env FLAVOR=flavor;make install 编译、安装name 软件的flavor
export PKG_PATH=/cdrom/5.0 /i386/ 设置软件安装默认路径
export PKG_CACHE=/data 安装时将下载的软件另存到/data 目录中
pkg_add -v pkg_name 安装名为pkg_name 的软件
pkg_add -u pkg_name 更新名为pkg_name 的软件
pkg_info 查看系统上已安装的软件
pkg_info -L pkg_name 查看某一个软件所安装的所有文件列表
pkg_info -M pkg_name 查看某一个软件安装时的提示信息
pkg_delete pkg_name 删除名为pkg_name 的软件
pkg_delete /var/db/pkg/* 快速删除所有软件

磁盘|文件
--------
df -h 查看磁盘空间整体使用情况
df -i 查看磁盘inode 使用情况
du -sh /data 查看/data 目录大小
du -sh /var/* 列出/var 目录下所有文件及目录大小
ls -lk /data | sort -k 5 列出/data 目录下文件详细信息并以大小排序
tar cf - * | ( cd /dest; tar xfp -) 使用tar 复制当前文件夹到/dest
chmod +x file.sh 为file.sh 文件添加可执行权限
chown –R www:www /dir 递归更改/dir 目录的所有者/组 为www
chmod –R 755 /data 递归更改/data 目录的权限为755

压缩解压
--------
tar -czf files.tar.gz files 将files 目录递归归档并压缩成files.tar.gz 文件
7z a files.7z files 将files 目录递归添加到files.7z(需要安装p7zip)
7z a -mhe=on -pmy_pwd files.7z files 将files 目录递归添加到files.7z，并以”my_pwd"密码保护
tar zxfv /tmp/files.tar.gz 在当前目录下解压tar.gz（及.tgz/z)文件
tar xjvf files.bz2 解压bz2 文件
unzip files.zip 解压zip 文件(需安装unzip)
unrar files.rar 解压rar 文件(需安装unrar)
7z x files.7z 解压7z 格式文件（需安装p7zip）
uncompress file.Z 解压file.Z 文件
tar xf files.tar 解压file.tar 文件


光盘U盘
---------
vnconfig vnd0 /tmp/ISO.image
挂载ISO 文件
mount -t cd9660 /dev/vnd0c /mnt
mount_cd9660 /dev/cd0a /mnt 挂载CDROM
sysctl hw.disknames 查看系统中的磁盘
disklabel sd0 查看sd0 盘的disklabel
mount -t msdos /dev/sd0i /mnt/flashmem 挂载USB 存储（winows，fat32 格式）


OpenSSL
---------
openssl genrsa -out /etc/ssl/private/server.key 1024 为本机栺成1024 位RSA 密钥
openssl req -new -key /etc/ssl/private/server.key -out /etc/ssl/private/server.csr 使用密钥栺成证书签署请求文件（certificate signing request）
openssl x509 -req -days 365 -in /etc/ssl/private/server.csr \
        -signkey /etc/ssl/private/server.key -out /etc/ssl/server.crt
自己根据上述CSR 文件签署/颁发SSL 证书，有效期365 天


文件|目录
--------
touch /tmp/test 更改/tmp/test 文件的的修改日期和访问日期为当前时间，如果文件不存在则创建此文件
cd /home/acheng 切换当前工作目录到/home/acheng
pwd 显示当前工作目录
cd 快速回到主目录
cd - 快速回到上一个工作目录
cp /home/file /tmp/ 将/home/file 文件复制到 /tmp 目录下
mv /home/file /tmp 将/home/file 文件移动至/tmp 目录下
mv file1 file1.bak 将当前目录下的file1（文件或目录）重命名为file1.bak
file file1 查看file1 文件类型信息
mkdir data 在当前目录下创建一个名为data 的文件夹
mkdir –p mydir/ {data1,data2} 在mydir 目录下创建两个名称分别为data1、data2 的子文件夹，如果
mydir 不存在则创建
rm –rf mydir 递归删除mydir 文件夹(无确认提示)
ls -l file1 查看file1 文件详细信息（或file1 目录下文件详细信息）
more file1 使用more 查看file1 文件
grep “string” file1 搜索file1 中是否包含“string”字符串，如果有则打印该行
wc –l(c/w) file1 查看file1 文件包含多少行（字母/单词）
awk ‘{print $3}’ file1 打印file1 中每行的第三个字段
grep –v ^$ file1 过滤file1 中的空白行
tr –d ‘\15’< win > unix 删除文件win 中的^M 字符，并将文件另存为unix（仿dos2unix）

网络相关
--------
ftp http://example.com/file.tar 下载file.tar 文件到当前目录
curl http://example.com/file[001-100].tar 使用curl 下载file001.tar - file100.tar
scp file1 target.com:/tmp 拷贝file1 到target.com 主机的tmp 文件夹下（需 当前用户在目标主机上有相应权限）
ssh target.com “uname –a;uptime” 在target.com 主机上执行引号中的命令

ifconfig $nic $ip $netmask 配置网卡$nic 的IP 为$ip,子网掩码为$netmask
ifconfig $wl_nic scan 扫描可用的无线网络
ifconfig $wl_nic nwid $nwid wpakey $wpakey
dhclient $wl_nic
配置无线网卡$nw_nic 使用wpa(2)密钥$wpakey
连接到名称为$nwid 的无线网络
sh /etc/netstart 重启网络服务
netstat –rn （route show） 查看本机路由表
route add default $ip 配置$ip 为本机默认路由
ifconfig 查看本机网卡信息
export http_proxy=http://hostnameort 配置hostnameort 做为http 代理服务器
unset http_proxy 取消hostnameort 做为http 代理服务器

文件校验
--------
md5 file 栺成文件file 的MD5 校验和
sha1 file 栺成文件file 的SHA1 校验和
sha256 file 栺成文件file 的SHA256 校验和
cksum –a rmd160 file 栺成文件file 的RMD160 校验和

文件搜索
---------
find /var/log -type f -name "*.gz" 列出/var/log 目录及其子目录下以“.gz"结尾的文件
find /data -name "*" -mtime +7 列出/data 目录及其子目录下7 天以前被修改过的文件或目录
find /data -type f -name "*.txt" -exec grep -inH "string" {} \; 在/data 目录下找出所有以.txt 结尾的文件并在这些文件中搜索”string“字符串，如果找到则打印文件名及 字符串出现的行号
find /data –type f –size +4096 找出/data 目录下大于2MB 的文件 (-size 后的数字以512byte=0.5KB 为单位)
find /data –type f –size +4096 –user acheng 找出/data 目录下大于2MB 且所有者为acheng 的文件
find /data –path /data/src –prune –or \( –name *.c –or –name *.h \) 找出/data 目录下所有以.h 或.c 结尾的文件，排除/data/src 目录

temperature
#/bin/sh
typeset -i10 HDDCUR
typeset -i10 HDDMAX
typeset -i10 HDDMIN
typeset -i10 CPU
typeset -i10 MainBOARD
typeset -i10 FAN
RAWTEMP=`atactl /dev/sd0c readattr | grep Temperature | cut -f 5`
HDDCUR=`echo $RAWTEMP | sed -e 's/0x.\{10\}/0x/'`
HDDMAX=`echo $RAWTEMP | sed -e 's/0x.\{2\}/0x/' | sed -e 's/.\{8\}$//'`
HDDMIN=`echo $RAWTEMP | sed -e 's/0x.\{6\}/0x/' | sed -e 's/.\{4\}$//'`
CPU=`sysctl hw.sensors.it0.temp0 | cut -d '=' -f2 | cut -c1-2 `
MainBOARD=`sysctl hw.sensors.it0.temp1 | cut -d '=' -f2 | cut -c1-2 `
FAN=`sysctl hw.sensors.it0.fan0 | cut -d '=' -f2 | cut -c1-4 `
echo "Current HDD Temp $HDDCUR degC (Min/Max $HDDMIN/$HDDMAX)"
echo "Current CPU Temp $CPU degC"
echo "Current MainBOARD Temp $MainBOARD degC"
echo "Current CPU FAN $FAN rpm"

安装 openbsd 分区最理想如下，以方便系统利用mount 选项 nosuid, nodev 来

 增加安全性 

 /dev/wd0a /                   500M
 /dev/wd0b /altroot            500M
 /dev/wd0d /swap               1G   2*DDR
 /dev/wd0f /tmp                2G
 /dev/wd0j /var                500M
 /dev/wd0h /usr                8G
 /dev/wd0e /home               Rest


 留意 /dev/wd0a 的 / , 和 /dev/wd0d 的 /altroot 容量是一致的， 独立一个 

 /altroot 分区可以启动 openbsd 帮你每天备份一次 / 分区， 万一 / 分区有

 问题不能启动，可以用 boot loader 改为以 /altroot 去 启动 openbsd.

 你需要分/(root)、/swap、/tmp、/var、/usr、和/home给OpenBSD。如果你忘记

 建立上述的其中一个分区，安装程序将把原本安装到那个分区的文件全都安装到

 root分区中。这将很快填充满你的root分区！

 /Root
 root分区保存了主要的系统配置文件和大量在单用户模式下用到的UNIX基本工具

 。一般来说分配500MB的root分区是比较充足的。Root Limitations 许多老的

 i386系统有504MB的硬盘大小限制，在这些BIOS下，你不能存取硬盘上504MB之外

 的任何数据。经过一段时间i386系统又有了一个类似的8GB大小限制。OpenBSD仍

 旧无条件遵从它。即使你的系统不受504MB大小限制，你的整个root分区也必须

 完全地包含在硬盘最前面的8GB空间中。如果你打破了这些规则，你更新了你的

 系统，或者移动了/bsd，你的电脑将可能无法引导。所以，分配硬盘的最前面

 500MB空间给root分区，这样类似的问题将不会在你头上发生。

 /Swap Space
 在你硬盘上的第二块应该是swap空间，这些磁盘空间是用来当作虚拟内存的。当

 你的计算机装上物理内存，它将开始把空闲的资料移动到swap分区上。简单地分

 配2倍于物理内存的swap空间是一个比较明智的选择。

 /tmp
 /tmp目录是系统范围的临时空间。如果你不建立单独的/tmp分区，它将被包含在

 root分区中。这或许不是你所希望的，特别是当你以只读模式挂载root分区的时

 候。我喜欢至少分配500MB空间给/tmp目录。自动软件安装器将频繁地在/tmp目

 录上解压文件。

 /var
 /var分区包含频繁修改的日志文件，mail spools，临时运行文件，默认website

 ，等等。如果你的服务器是一个WEB服务器，你的website日志将被存放在这个分

 区，并且你应该分配1GB或更多空间给/var。

 /usr
 /usr分区保存了操作系统程序，系统源代码，编译器和库文件等。大部分这些文

 件仅当你更新系统的时候才会被修改。我建议大概分配6GB空间给/usr分区。这

 样对于安装所有/usr下的目录和另外你所希望添加的packages包,安装的软件，

 以及安装OpenBSD源代码是比较充裕的。但如果你希望安装 X Window System ，

 你应该至少分配350MB空间给/usr分区。

 /home
 /home分区是保存用户私人文件的地方。如果你还有大量剩余的磁盘空间，就指

 派给它。；它不需要很快，它上面保存的资料正是你所需要的。

 平时尽量别用root登录，真的容易删错东西  
 用adduser创建用户
   rmuser删除用户，是交互式的，很好。

 安装开始
 进入SHELL选s
 查看磁盘分区
 # sysctl hw.disknames
 一般是wd0，对wd0进行重新分区
 # fdisk -i wd0 对wd0进行初始化
 # disklabel -E wd0 对wd0进行编辑

 >a a 添加a分区 指定大小，依次b,d,e 
 c是系统分区，不能指定
 >w 写入
 >q 保存退出
 # install 重新开始安装


 移动磁盘sd0 分区

 # fdisk sd0
 查看sd0 分区的扇区划分
 分区格式partition id: a6
 可以用？查看各种系统分区代码

 开始位置offset:0
 也可以留出前面部分扇区，如21,就是留出0-21的扇区，从22扇区开始

 >a a 指定大小，
 mount point: /home  把a分区挂载到/home 目录下，依次b,d,e 
 >w 写入
 >q 保存退出


 # disklabel sd0
 查看sd0里面的分区
 >a a 添加分区a
 >d a 删除分区a
 >p 显示分区情况
 # disklabel -E sd0 编辑分区
 # newfs sd0a
 在sd0上创建a文件系统分区

 Gnome桌面
 应用软件
 # pkg_add -v empathy               (IM Client)
 # pkg_add -v mplayer               (建议安装)
 # pkg_add -v mousepad              (Text Editor)
 # pkg_add -v epdfview              (PDF Viewer)
 # pkg_add -v gimp                  (Image Processing)
 # pkg_add -v ristretto             (Image Displayer)
 # pkg_add -v galculator            (Calculator)
 # pkg_add -v libreoffice


 命令

 1.查看ls
 $ ls /var/
 具体查看
 $ ls -1 /var

 2.切换路径
 $ cd /var/ 切换到/var路径下

 3.查看位置
 $ pwd 回车会看到你当前所处路径

 4.创建目录
 $ mkdir movie
 如果出错，就找到要创建目录的位置再创建
 $ cd /home/entertainment
 $ pwd /home/entertainment
 $ mkdir movie
 $ ls -1
 就会看到刚创建的目录信息

 5.删除空目录
 $ rmdir movie
 $ ls -1
 查看就没有了

 6.删除整个目录文件
 $ rm -R movie  
 就会把movie和里面的东西全部删除

 7.重命名目录名
 $ mv movie tv
 $ mv /home/movie tv
 $ ls -1
 就会看到movie变成了tv

 8.$touch movie/girl
 在movie下创建girl文件，如果文件存在，会更新文件访问时间
 这里是相对路径，在当前路径下创建

 9.查看文件全部内容
 $ cat /home/movie

 10.查看文件部分内容
 $ more /home/movie
 只打开首页，如果要翻页可以用空格或者箭头

 11.查找文件
 $ find /home/movie -name "*.jpeg"
 movie下及子目录所有jpeg文件都会显示出来
 $ grep .exe /home/softwear/*
 softwear目录所有.exe文件都会显示出来,但是子目录的文件不会显示

 12.设备挂载
 先查看设备位置
 # tail /var/log/messages
 或者
 # sysctl hw.disknames 
 也会显示多出来的设备盘符
 # disklabel sd0
 查看多出来的盘号和设备文件格式
 # mount -t ntfs /dev/sd0i /home/file
 ntfs是设备文件格式，后面是文件所处路径，后面是文件将挂载的目录
 # ls /home/file 就可以看到挂载的文件

 光盘文件格式一般是cd9660

 挂载USB盘
 # mkdir /mnt/usb
 # mount_msdos /dev/sd0i /mnt/usb


 # pkg_add    添加软件
 # pkg_delete 删除软件


 安全设置

 Q:防止cracker利用rootkit工具通过后门进入系统
 A:对/bin,/sbin进行安全保护:
    # chflags schg /bin/*
    # chflags schg /sbin/*
    /bin/ls -lo /bin
    看看文件是不是已经是schg了，想要去掉的话还必须进入单用户模式chflags 

 noschg /bin/*可以把file flag去掉

 Q:禁止一般用户查看系统日志
 A:# chmod g-w,o-r /var/log/*

 限制SSH验证重试次数： 
 A: # vi /etc/ssh/sshd_config 
     MaxAuthTries 6

 可以把系统的核心的运行层次设置为最安全的层次: 
 A: # sysctl -w kern.securelevel=2

 禁用由inetd启动的程序： 
 A: # vi /etc/sysctl.conf 
     inetd=NO

 禁用系统自定义的PF规则
 # vi /etc/rc.conf
 　pf=NO

 如果忘记ROOT的密码 
 A: boot> boot –s 
 boot> fsck -p / && mount -uw / 
 boot> fsck -p /usr && mount /usr 
 boot> passwd root 

 如何解决sudo不成功
 A:sudo不能root时要编辑 /etc/group 文件
   #vi /etc/group 
   wheel:*:0:root,xxx,xxx,xxx,...
   在wheel:*:0:root后加逗号和用户名即可。
   sudo后有没权限执行的命令，这时要修改 /etc/sudoers 文件
   root  ALL=(ALL)  ALL  （下一行新建）
   xxxx  ALL=(ALL)  ALL  
   这样这个用户就会有root的所有权限。

 如何让OpenBSD关闭并自动关闭电源 
 A:shutdown -ph now
